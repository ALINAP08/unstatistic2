{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "unstatisticdatafactapark"
		},
		"localsqldb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'localsqldb'"
		},
		"unstatisticdbaparklinkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'unstatisticdbaparklinkedservice'"
		},
		"unstatisticuploadapp_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'unstatisticuploadapp'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/First_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_ov9",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_ov9",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "dbo.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "dbo.@{item().destination.table}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"tableOption": "autoCreate"
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"translator": {
											"value": "@item().copyActivity.translator",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_ov9",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_ov9",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().destination.table"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "dicAdmitSource"
								},
								"destination": {
									"table": "dicAdmitSource"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "ID",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ID",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "Code",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Code",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "Description",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Description",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "InsertDateTime",
													"type": "DateTime",
													"physicalType": "datetime"
												},
												"sink": {
													"name": "InsertDateTime",
													"type": "DateTime"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							},
							{
								"source": {
									"table": "dicAgebyAdmitDate"
								},
								"destination": {
									"table": "dicAgebyAdmitDate"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "ID",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ID",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "Code",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Code",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "Group1_ID",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "Group1_ID",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "Group1",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Group1",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "MinValue",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "MinValue",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "MaxValue",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "MaxValue",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "InsertDateTime",
													"type": "DateTime",
													"physicalType": "datetime"
												},
												"sink": {
													"name": "InsertDateTime",
													"type": "DateTime"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							},
							{
								"source": {
									"table": "dicAgebyDischargeDate"
								},
								"destination": {
									"table": "dicAgebyDischargeDate"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "ID",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ID",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "Code",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Code",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "Group1_ID",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "Group1_ID",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "Group1",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Group1",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "MinValue",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "MinValue",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "MaxValue",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "MaxValue",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "InsertDateTime",
													"type": "DateTime",
													"physicalType": "datetime"
												},
												"sink": {
													"name": "InsertDateTime",
													"type": "DateTime"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							},
							{
								"source": {
									"table": "dicBillHold"
								},
								"destination": {
									"table": "dicBillHold"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "ID",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ID",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "Code",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Code",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "Description",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Description",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "InsertDateTime",
													"type": "DateTime",
													"physicalType": "datetime"
												},
												"sink": {
													"name": "InsertDateTime",
													"type": "DateTime"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							},
							{
								"source": {
									"table": "dicCoder"
								},
								"destination": {
									"table": "dicCoder"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "ID",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ID",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "Code",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Code",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "Description",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Description",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "InsertDateTime",
													"type": "DateTime",
													"physicalType": "datetime"
												},
												"sink": {
													"name": "InsertDateTime",
													"type": "DateTime"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_ov9')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_ov9')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/unstatic-extract')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy to Sql",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SP Create",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dbo].[test];",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountSuffix",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountSuffix",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EMPINumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EMPINumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FacilityID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FacilityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ServiceDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ServiceDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AdmitDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AdmitDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DischargeDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DischargeDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FinalBillDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FinalBillDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TxnInsurancePlan",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TxnInsurancePlan",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TxnFinancialClass",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TxnFinancialClass",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HTRID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HTRID",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "src_csv_new",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dst_sql_test",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SP Create",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[pipelineExecutiHistiry_Create]",
							"storedProcedureParameters": {
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "unstatisticdbaparklinkedservice",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP Update",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy to Sql",
								"dependencyConditions": [
									"Succeeded",
									"Skipped"
								]
							},
							{
								"activity": "Set variable Status",
								"dependencyConditions": [
									"Succeeded",
									"Skipped"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[pipelineExecutiHistiry_Update]",
							"storedProcedureParameters": {
								"Description": {
									"value": {
										"value": "@variables('PipelineExecDescription')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@variables('PipelineExecStatus')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "unstatisticdbaparklinkedservice",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set variable Description",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "copy to Sql",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "PipelineExecDescription",
							"value": {
								"value": "@activity('copy to Sql').error.message",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable Description",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "PipelineExecStatus",
							"value": "Failed"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"PipelineExecDescription": {
						"type": "String",
						"defaultValue": "succeed"
					},
					"PipelineExecStatus": {
						"type": "String",
						"defaultValue": "succeed"
					}
				},
				"folder": {
					"name": "unstatistic"
				},
				"annotations": [
					"extract"
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/src_csv_new')]",
				"[concat(variables('factoryId'), '/datasets/dst_sql_test')]",
				"[concat(variables('factoryId'), '/linkedServices/unstatisticdbaparklinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/unstatic-extract_lookup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy to Sql",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SP Create",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountSuffix",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountSuffix",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EMPINumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EMPINumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FacilityID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FacilityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ServiceDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ServiceDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AdmitDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AdmitDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DischargeDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DischargeDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FinalBillDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FinalBillDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TxnInsurancePlan",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TxnInsurancePlan",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TxnFinancialClass",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TxnFinancialClass",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HTRID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HTRID",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "src_csv_new",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.Container",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dst_sql_test",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SP Create",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[pipelineExecutiHistiry_Create]",
							"storedProcedureParameters": {
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "unstatisticdbaparklinkedservice",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP Update",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Set variable Status",
								"dependencyConditions": [
									"Succeeded",
									"Skipped"
								]
							},
							{
								"activity": "Lookup_FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[pipelineExecutiHistiry_Update]",
							"storedProcedureParameters": {
								"Description": {
									"value": {
										"value": "@variables('PipelineExecDescription')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@variables('PipelineExecStatus')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "unstatisticdbaparklinkedservice",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set variable Description",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "copy to Sql",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "PipelineExecDescription",
							"value": {
								"value": "@activity('copy to Sql').error.message",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable Description",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "PipelineExecStatus",
							"value": "Failed"
						}
					},
					{
						"name": "Lookup_FileName",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "copy to Sql",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@replace('Update [dbo].[test2] \nSET [Filename] =''variablefilename''\nwhere [Filename] IS NULL\nSelect 1;'\n,'variablefilename'\n,pipeline().parameters.FileName\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsr_sql_dummy2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Container": {
						"type": "string",
						"defaultValue": "unstaticcontapp"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "new.csv"
					}
				},
				"variables": {
					"PipelineExecDescription": {
						"type": "String",
						"defaultValue": "succeed"
					},
					"PipelineExecStatus": {
						"type": "String",
						"defaultValue": "succeed"
					}
				},
				"folder": {
					"name": "unstatistic"
				},
				"annotations": [
					"extract"
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/src_csv_new')]",
				"[concat(variables('factoryId'), '/datasets/dst_sql_test')]",
				"[concat(variables('factoryId'), '/linkedServices/unstatisticdbaparklinkedservice')]",
				"[concat(variables('factoryId'), '/datasets/dsr_sql_dummy2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_ov9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "unstatisticdbaparklinkedservice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/unstatisticdbaparklinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_ov9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "localsqldb",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/localsqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsr_sql_dummy2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "unstatisticdbaparklinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/unstatisticdbaparklinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dst_sql_dummy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "unstatisticdbaparklinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Filename",
						"type": "varchar"
					},
					{
						"name": "AccountNumber",
						"type": "varchar"
					},
					{
						"name": "AccountSuffix",
						"type": "varchar"
					},
					{
						"name": "EMPINumber",
						"type": "varchar"
					},
					{
						"name": "FacilityID",
						"type": "varchar"
					},
					{
						"name": "ServiceDate",
						"type": "varchar"
					},
					{
						"name": "AdmitDate",
						"type": "varchar"
					},
					{
						"name": "DischargeDate",
						"type": "varchar"
					},
					{
						"name": "FinalBillDate",
						"type": "varchar"
					},
					{
						"name": "TxnInsurancePlan",
						"type": "varchar"
					},
					{
						"name": "TxnFinancialClass",
						"type": "varchar"
					},
					{
						"name": "HTRID",
						"type": "varchar"
					}
				],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/unstatisticdbaparklinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dst_sql_test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "unstatisticdbaparklinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Filename",
						"type": "varchar"
					},
					{
						"name": "AccountNumber",
						"type": "varchar"
					},
					{
						"name": "AccountSuffix",
						"type": "varchar"
					},
					{
						"name": "EMPINumber",
						"type": "varchar"
					},
					{
						"name": "FacilityID",
						"type": "varchar"
					},
					{
						"name": "ServiceDate",
						"type": "varchar"
					},
					{
						"name": "AdmitDate",
						"type": "varchar"
					},
					{
						"name": "DischargeDate",
						"type": "varchar"
					},
					{
						"name": "FinalBillDate",
						"type": "varchar"
					},
					{
						"name": "TxnInsurancePlan",
						"type": "varchar"
					},
					{
						"name": "TxnFinancialClass",
						"type": "varchar"
					},
					{
						"name": "HTRID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "test2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/unstatisticdbaparklinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_csv_new')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "unstatisticuploadapp",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string",
						"defaultValue": "unstaticcontapp"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "new.csv"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AccountNumber",
						"type": "String"
					},
					{
						"name": "AccountSuffix",
						"type": "String"
					},
					{
						"name": "EMPINumber",
						"type": "String"
					},
					{
						"name": "FacilityID",
						"type": "String"
					},
					{
						"name": "ServiceDate",
						"type": "String"
					},
					{
						"name": "AdmitDate",
						"type": "String"
					},
					{
						"name": "DischargeDate",
						"type": "String"
					},
					{
						"name": "FinalBillDate",
						"type": "String"
					},
					{
						"name": "TxnInsurancePlan",
						"type": "String"
					},
					{
						"name": "TxnFinancialClass",
						"type": "String"
					},
					{
						"name": "HTRID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/unstatisticuploadapp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/localsqldb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('localsqldb_connectionString')]"
				},
				"connectVia": {
					"referenceName": "localdb",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/localdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/unstatisticdbaparklinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('unstatisticdbaparklinkedservice_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/unstatisticuploadapp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('unstatisticuploadapp_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/first_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "First_Pipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-05-27T14:07:00",
						"timeZone": "FLE Standard Time",
						"schedule": {
							"hours": [
								15
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/First_Pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/localdb')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}