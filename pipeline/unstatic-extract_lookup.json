{
	"name": "unstatic-extract_lookup",
	"properties": {
		"activities": [
			{
				"name": "copy to Sql",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "SP Create",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "TRUNCATE TABLE [dbo].[test2];",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "AccountNumber",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "AccountNumber",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "AccountSuffix",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "AccountSuffix",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "EMPINumber",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "EMPINumber",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "FacilityID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "FacilityID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "ServiceDate",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "ServiceDate",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "AdmitDate",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "AdmitDate",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DischargeDate",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "DischargeDate",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "FinalBillDate",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "FinalBillDate",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "TxnInsurancePlan",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "TxnInsurancePlan",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "TxnFinancialClass",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "TxnFinancialClass",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "HTRID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "HTRID",
									"type": "String",
									"physicalType": "varchar"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "src_csv_new",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "dst_sql_test",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "SP Create",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[pipelineExecutiHistiry_Create]",
					"storedProcedureParameters": {
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineRunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "unstatisticdbaparklinkedservice",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP Update",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Set variable Status",
						"dependencyConditions": [
							"Succeeded",
							"Skipped"
						]
					},
					{
						"activity": "FileName",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[pipelineExecutiHistiry_Update]",
					"storedProcedureParameters": {
						"Description": {
							"value": {
								"value": "@variables('PipelineExecDescription')",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineRunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"Status": {
							"value": {
								"value": "@variables('PipelineExecStatus')",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "unstatisticdbaparklinkedservice",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Set variable Description",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "copy to Sql",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "PipelineExecDescription",
					"value": {
						"value": "@activity('copy to Sql').error.message",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable Status",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set variable Description",
						"dependencyConditions": [
							"Succeeded",
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "PipelineExecStatus",
					"value": "Failed"
				}
			},
			{
				"name": "FileName",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "copy to Sql",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@replace('Update [dbo].[test2]\nSET [Filename]=\"variableFileName\"\nwhere [Filename] IS NULL\nSelect 1;'\n,'variableFileName'\n,variables('Filename')\n)",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "dst_sql_dummy",
						"type": "DatasetReference"
					}
				}
			}
		],
		"parameters": {
			"Container": {
				"type": "string",
				"defaultValue": "unstaticcontapp"
			},
			"Path": {
				"type": "string"
			},
			"FileName": {
				"type": "string",
				"defaultValue": "new.csv"
			}
		},
		"variables": {
			"PipelineExecDescription": {
				"type": "String",
				"defaultValue": "succeed"
			},
			"PipelineExecStatus": {
				"type": "String",
				"defaultValue": "succeed"
			}
		},
		"folder": {
			"name": "unstatistic"
		},
		"annotations": [
			"extract"
		]
	}
}